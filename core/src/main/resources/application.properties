logging.level.org.springframework.jdbc.core=DEBUG

spring.application.name=core
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.datasource.url=jdbc:postgresql://${DB_HOSTNAME}:${DB_PORT}/${DB_DATABASE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

spring.kafka.consumer.bootstrap-servers= ${KAFKA_HOSTNAME}:${KAFKA_PORT}
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer

opentracing.jaeger.udp-sender.host=${JAEGER_AGENT_HOST}
opentracing.jaeger.udp-sender.port=${JAEGER_AGENT_PORT}
opentracing.jaeger.log-spans=true