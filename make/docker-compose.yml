version: '2.3'
services:
  postgresql:
    image: tmaxcloudck/book-db:0.0.1
    container_name: book-db
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
#    volumes:
#      - /data/database:/var/lib/postgresql/data:z
    networks:
      book:
    ports:
      - 5432:5432
    shm_size: '1gb'
  core:
    image: tmaxcloudck/book-core:0.0.1
    container_name: book-core
    env_file:
      - ./core/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    networks:
      book:
    ports:
      - 8080:8080
    depends_on:
      - postgresql
  rating:
    image: tmaxcloudck/book-rating:0.0.1
    container_name: book-rating
    env_file:
      - ./rating/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    networks:
      - book
    ports:
      - 8081:8080
    depends_on:
      - postgresql

#  proxy:
#    image: tmaxcloudck/nginx-photon:0.0.1
#    container_name: nginx
#    restart: always
#    cap_drop:
#      - ALL
#    cap_add:
#      - CHOWN
#      - SETGID
#      - SETUID
#      - NET_BIND_SERVICE
#    volumes:
#      - ./nginx:/etc/nginx:z
#      - /data/secret/cert:/etc/cert:z
#      - type: bind
#        source: ./shared/trust-certificates
#        target: /book_cust_cert
#    networks:
#      - book
#    ports:
##      - 80:8080
##      - 443:8443
#    depends_on:
#      - registry
#      - core
#      - rating
#      - log
#    logging:
#      driver: "syslog"
#      options:
#        syslog-address: "tcp://localhost:1514"
#        tag: "proxy"
#    labels:
#      - traefik.http.routers.proxy.rule=Path(`/book`)
#      - traefik.http.middlewares.proxy.stripprefix.prefixes=/book
#      - traefik.http.services.proxy.loadBalancer.server.port=8080
#      - traefik.http.services.proxy.loadBalancer.server.port=8443
#  traefik:
#    image: traefik:v2.5
#    container_name: traefik
#    command: --api.insecure=true --providers.docker
#    restart: always
#    cap_drop:
#      - ALL
#    cap_add:
#      - CHOWN
#      - SETGID
#      - SETUID
#      - NET_BIND_SERVICE
#    networks:
#      - book
#    ports:
#      - 80:80
#      - 443:443
#      - 8080:8080
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
networks:
  book:
    external: false
